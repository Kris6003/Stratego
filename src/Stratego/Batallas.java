package Stratego;

import java.util.ArrayList;
import javax.swing.JFrame;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jenniferbueso
 */
public class Batallas extends javax.swing.JFrame {
    ArrayList<UsuariosInfo> listaUsuarios;
    ArrayList<LogsInfo> listaLogs;
    ArrayList<UsuariosEliminadosInfo> listaUsuariosEliminados;
    
    //Atributos por Default de la Cuenta
    private boolean modoTutorial = true;
    
    //Atributos de Mostrar
    String usuarioGPerfil;
    int totalVillanos=0, totalHeroes=0;
    int indexUser;
    
    public Batallas(int indexUser, ArrayList<UsuariosInfo> listaUsuariosExterna, ArrayList<LogsInfo> listaLogsExterna, String nombreUsuario, ArrayList<UsuariosEliminadosInfo> listaUsuariosEliminadosExterna, boolean ModoJuego) {
        
        // Asignar valores a las variables de instancia
        usuarioGPerfil = nombreUsuario;
        this.listaUsuarios = listaUsuariosExterna;
        this.listaLogs = listaLogsExterna;
        this.listaUsuariosEliminados = listaUsuariosEliminadosExterna;
        this.modoTutorial = ModoJuego;
        this.indexUser = indexUser;
        
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1180, 626);
        setLocationRelativeTo(null);
        setVisible(true);
        
        // Mostrar usuarios activos
        mostrarUsuariosActivos();
        
        // Calcular y mostrar estadísticas de batallas
        calcularEstadisticasBatallas();
        
        // Mostrar historial de usuarios
        mostrarHistorialUsuarios();
        
        // Mostrar estadísticas de héroes y villanos
        mostrarEstadisticasHeroesVillanos();
    }

    // Método para mostrar usuarios activos
    private void mostrarUsuariosActivos() {
        StringBuilder usuariosActivosBuilder = new StringBuilder();
        for (UsuariosInfo usuario : listaUsuarios) {
            usuariosActivosBuilder.append(usuario.getUsuarioG()).append("\n");
        }
        UsuariosActivosM.setText(usuariosActivosBuilder.toString());
    }

    // Método para calcular y mostrar estadísticas de batallas
    private void calcularEstadisticasBatallas() {
        for(int i=0; i < listaLogs.size(); i++){
              if(!(listaLogs.get(i).obtenerLogHeroes_Ganados().equals(""))){
                  totalVillanos++;
              }
              if(!(listaLogs.get(i).obtenerLogVillanos_Ganados().equals(""))){
                  totalHeroes++;
              }
          }
        HeroesField.setText(Integer.toString(totalHeroes));
        VillanosField.setText(Integer.toString(totalVillanos));
    }

    // Método para mostrar historial de usuarios
    private void mostrarHistorialUsuarios() {
        StringBuilder historialUsuariosBuilder = new StringBuilder();
        for (UsuariosEliminadosInfo usuario : listaUsuariosEliminados) {
            historialUsuariosBuilder.append(usuario.getUsuariosEliminado());
            historialUsuariosBuilder.append("\n");
        }
        UsuarioHistoricoM.setText(historialUsuariosBuilder.toString());
    }

    // Método para mostrar estadísticas de héroes y villanos
    private void mostrarEstadisticasHeroesVillanos() {
        // Puedes agregar aquí cualquier lógica adicional relacionada con estadísticas de héroes y villanos
        // según tus necesidades.
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        UsuarioHistoricosField = new javax.swing.JScrollPane();
        UsuarioHistoricoM = new javax.swing.JTextArea();
        UsuariosActivosField = new javax.swing.JScrollPane();
        UsuariosActivosM = new javax.swing.JTextArea();
        HeroesField = new javax.swing.JLabel();
        VillanosField = new javax.swing.JLabel();
        BotonRegresar = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UsuarioHistoricoM.setEditable(false);
        UsuarioHistoricoM.setBackground(new java.awt.Color(255, 255, 255));
        UsuarioHistoricoM.setColumns(20);
        UsuarioHistoricoM.setRows(5);
        UsuarioHistoricosField.setViewportView(UsuarioHistoricoM);

        jPanel1.add(UsuarioHistoricosField, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 250, 160));

        UsuariosActivosM.setEditable(false);
        UsuariosActivosM.setBackground(new java.awt.Color(255, 255, 255));
        UsuariosActivosM.setColumns(20);
        UsuariosActivosM.setRows(5);
        UsuariosActivosField.setViewportView(UsuariosActivosM);

        jPanel1.add(UsuariosActivosField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 250, 160));

        HeroesField.setFont(new java.awt.Font("Impact", 0, 25)); // NOI18N
        HeroesField.setForeground(new java.awt.Color(0, 0, 0));
        HeroesField.setText("Heroes");
        jPanel1.add(HeroesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 500, -1, -1));

        VillanosField.setFont(new java.awt.Font("Impact", 0, 25)); // NOI18N
        VillanosField.setForeground(new java.awt.Color(0, 0, 0));
        VillanosField.setText("Villanos");
        jPanel1.add(VillanosField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 500, -1, -1));

        BotonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FondosInterfaz/BotonRegresar.png"))); // NOI18N
        BotonRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonRegresarMouseClicked(evt);
            }
        });
        jPanel1.add(BotonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 70, -1, -1));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FondosInterfaz/Batallas.png"))); // NOI18N
        jPanel1.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1180, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonRegresarMouseClicked
       MenuPrincipal menuPrincipal = new MenuPrincipal(indexUser,this.listaUsuarios, this.listaLogs, usuarioGPerfil,this.listaUsuariosEliminados, modoTutorial);
       menuPrincipal.setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_BotonRegresarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Batallas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Batallas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Batallas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Batallas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Batallas(-1,null,null,null,null,true).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BotonRegresar;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel HeroesField;
    private javax.swing.JTextArea UsuarioHistoricoM;
    private javax.swing.JScrollPane UsuarioHistoricosField;
    private javax.swing.JScrollPane UsuariosActivosField;
    private javax.swing.JTextArea UsuariosActivosM;
    private javax.swing.JLabel VillanosField;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
